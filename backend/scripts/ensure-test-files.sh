#!/bin/bash

# Script to ensure test files exist for the laboratory
set -e

FIXTURES_DIR="backend/tests/fixtures"

echo "🔍 Ensuring test files exist for laboratory..."

# Create fixtures directory if it doesn't exist
mkdir -p "$FIXTURES_DIR"

# Create hello.txt if it doesn't exist
if [ ! -f "$FIXTURES_DIR/hello.txt" ]; then
    echo "📝 Creating hello.txt..."
    cat > "$FIXTURES_DIR/hello.txt" << 'EOF'
Hello, World!

This is a test file for the file transfer laboratory.
It contains multiple lines to test the transfer functionality.

Features being tested:
- TCP reliable transfer
- UDP fire-and-forget transfer  
- Bidirectional communication
- Error handling

File size: Small (< 1KB)
Protocol: Both TCP and UDP
Network: Cross-subnet transfer via router

Generated by: File Transfer Lab
Timestamp: $(date)
EOF
    echo "✅ hello.txt created"
else
    echo "✅ hello.txt already exists"
fi

# Create config.json if it doesn't exist
if [ ! -f "$FIXTURES_DIR/config.json" ]; then
    echo "📝 Creating config.json..."
    cat > "$FIXTURES_DIR/config.json" << 'EOF'
{
  "lab_config": {
    "name": "File Transfer Laboratory",
    "version": "1.0.0",
    "description": "Configuration file for testing file transfers",
    "networks": {
      "network_a": {
        "subnet": "172.20.0.0/24",
        "gateway": "172.20.0.1",
        "machine": "172.20.0.10"
      },
      "network_b": {
        "subnet": "172.21.0.0/24", 
        "gateway": "172.21.0.1",
        "machine": "172.21.0.10"
      },
      "router": {
        "network_a_ip": "172.20.0.2",
        "network_b_ip": "172.21.0.2"
      }
    },
    "protocols": {
      "tcp": {
        "chunk_size": 8192,
        "reliable": true,
        "connection_oriented": true
      },
      "udp": {
        "chunk_size": 1024,
        "reliable": false,
        "fire_and_forget": true
      }
    },
    "test_scenarios": [
      "tcp_basic_transfer",
      "udp_fire_and_forget", 
      "bidirectional_transfer",
      "error_handling",
      "network_isolation"
    ]
  }
}
EOF
    echo "✅ config.json created"
else
    echo "✅ config.json already exists"
fi

# Create a larger test file for performance testing
if [ ! -f "$FIXTURES_DIR/large-test.bin" ]; then
    echo "📝 Creating large-test.bin (100KB)..."
    dd if=/dev/urandom of="$FIXTURES_DIR/large-test.bin" bs=1024 count=100 2>/dev/null
    echo "✅ large-test.bin created (100KB)"
else
    echo "✅ large-test.bin already exists"
fi

# Create a medium test file
if [ ! -f "$FIXTURES_DIR/medium-test.txt" ]; then
    echo "📝 Creating medium-test.txt..."
    cat > "$FIXTURES_DIR/medium-test.txt" << 'EOF'
# Medium Test File for File Transfer Laboratory

This file is designed to test medium-sized file transfers across network boundaries.

## Test Scenarios

### TCP Transfer Test
- Reliable delivery
- Connection-oriented
- 8KB chunks
- Acknowledgment-based flow control

### UDP Transfer Test  
- Fire-and-forget delivery
- Connectionless
- 1KB chunks
- No acknowledgments

### Network Topology
```
Machine A (172.20.0.10) ←→ Router (172.20.0.2/172.21.0.2) ←→ Machine B (172.21.0.10)
```

### Performance Metrics
- Throughput measurement
- Latency analysis
- Packet loss detection (UDP)
- Error rate monitoring

### Content Padding
EOF

    # Add some padding to make it a medium-sized file
    for i in {1..50}; do
        echo "Line $i: This is padding content to increase file size for testing purposes. Lorem ipsum dolor sit amet, consectetur adipiscing elit." >> "$FIXTURES_DIR/medium-test.txt"
    done
    
    echo "✅ medium-test.txt created"
else
    echo "✅ medium-test.txt already exists"
fi

# Show file information
echo ""
echo "📊 Test Files Summary:"
echo "====================="
ls -lah "$FIXTURES_DIR"

echo ""
echo "✅ All test files are ready for laboratory use!"